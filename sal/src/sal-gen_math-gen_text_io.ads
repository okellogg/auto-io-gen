--  Abstract :
--
--  Text_IO for types in SAL.Gen_Math
--
--  This file is NOT auto-generated by Auto_Io_Gen from SAL.Gen_Math,
--  because that would use Num_Type, but we want Real_Type.
--
--  Copyright (C) 2009 Stephen Leake.  All Rights Reserved.
--
--  This library is free software; you can redistribute it and/or
--  modify it under terms of the GNU General Public License as
--  published by the Free Software Foundation; either version 2, or
--  (at your option) any later version. This library is distributed in
--  the hope that it will be useful, but WITHOUT ANY WARRANTY; without
--  even the implied warranty of MERCHANTABILITY or FITNESS FOR A
--  PARTICULAR PURPOSE. See the GNU General Public License for more
--  details. You should have received a copy of the GNU General Public
--  License distributed with this program; see file COPYING. If not,
--  write to the Free Software Foundation, 59 Temple Place - Suite
--  330, Boston, MA 02111-1307, USA.
--
--  As a special exception, if other files instantiate generics from
--  this unit, or you link this unit with other files to produce an
--  executable, this unit does not by itself cause the resulting
--  executable to be covered by the GNU General Public License. This
--  exception does not however invalidate any other reasons why the
--  executable file might be covered by the GNU Public License.
--
with Ada.Text_IO;
generic
package SAL.Gen_Math.Gen_Text_IO is

   package Real_Text_IO is new Ada.Text_IO.Float_IO (Real_Type);
   procedure Put
      (File  : in Ada.Text_IO.File_Type;
       Item  : in Real_Type;
       Fore  : in Ada.Text_IO.Field := Real_Text_IO.Default_Fore;
       Aft   : in Ada.Text_IO.Field := Real_Text_IO.Default_Aft;
       Exp   : in Ada.Text_IO.Field := Real_Text_IO.Default_Exp)
      renames Real_Text_IO.Put;
   procedure Get
      (File  : in     Ada.Text_IO.File_Type;
       Item  :    out Real_Type;
       Width : in     Ada.Text_IO.Field := 0)
      renames Real_Text_IO.Get;
   procedure Put
      (Item  : in Real_Type;
       Fore  : in Ada.Text_IO.Field := Real_Text_IO.Default_Fore;
       Aft   : in Ada.Text_IO.Field := Real_Text_IO.Default_Aft;
       Exp   : in Ada.Text_IO.Field := Real_Text_IO.Default_Exp)
      renames Real_Text_IO.Put;
   procedure Get
      (Item  :    out Real_Type;
       Width : in     Ada.Text_IO.Field := 0)
      renames Real_Text_IO.Get;

end SAL.Gen_Math.Gen_Text_IO;
