Testing Generic_Inverse_Array_Math
Three_Vector => 
(  2.00000,  -3.00000,   4.00000)
Four_Vector => 
(  2.00000,   3.00000,   4.00000,   5.00000)
Three_By_Three => 
((  1.00000,   2.00000,   3.00000), 
(  5.00000,   6.00000,   7.00000), 
(  9.00000,  -1.00000,  -2.00000))
Three_By_Four => 
((  1.00000,   2.00000,   3.00000,   4.00000), 
(  5.00000,   6.00000,   7.00000,   8.00000), 
(  9.00000,  -1.00000,  -2.00000,  -3.00000))
Four_By_Three => 
((  1.00000,   2.00000,   3.00000), 
(  4.00000,   5.00000,   6.00000), 
(  7.00000,   8.00000,   9.00000), 
( -1.00000,  -2.00000,  -3.00000))

- Three_By_Four => 
(( -1.00000,  -2.00000,  -3.00000,  -4.00000), 
( -5.00000,  -6.00000,  -7.00000,  -8.00000), 
( -9.00000,   1.00000,   2.00000,   3.00000))
Three_By_Four - Three_By_Four => 
((  0.00000,   0.00000,   0.00000,   0.00000), 
(  0.00000,   0.00000,   0.00000,   0.00000), 
(  0.00000,   0.00000,   0.00000,   0.00000))
Three_By_Four + Three_By_Four => 
((  2.00000,   4.00000,   6.00000,   8.00000), 
( 10.00000,  12.00000,  14.00000,  16.00000), 
( 18.00000,  -2.00000,  -4.00000,  -6.00000))
5.0 * Three_By_Four => 
((  5.00000,  10.00000,  15.00000,  20.00000), 
( 25.00000,  30.00000,  35.00000,  40.00000), 
( 45.00000,  -5.00000, -10.00000, -15.00000))

- Four_By_Three => 
(( -1.00000,  -2.00000,  -3.00000), 
( -4.00000,  -5.00000,  -6.00000), 
( -7.00000,  -8.00000,  -9.00000), 
(  1.00000,   2.00000,   3.00000))
Four_By_Three - Four_By_Three => 
((  0.00000,   0.00000,   0.00000), 
(  0.00000,   0.00000,   0.00000), 
(  0.00000,   0.00000,   0.00000), 
(  0.00000,   0.00000,   0.00000))
Four_By_Three + Four_By_Three => 
((  2.00000,   4.00000,   6.00000), 
(  8.00000,  10.00000,  12.00000), 
( 14.00000,  16.00000,  18.00000), 
( -2.00000,  -4.00000,  -6.00000))
5.0 * Four_By_Three => 
((  5.00000,  10.00000,  15.00000), 
( 20.00000,  25.00000,  30.00000), 
( 35.00000,  40.00000,  45.00000), 
( -5.00000, -10.00000, -15.00000))

Three_By_Four * Four_Vector => ( 40.00000,  96.00000,  -8.00000)
Transpose (Three_By_Four) * Three_Vector => ( 23.00000, -18.00000, -23.00000, -28.00000)
Four_By_Three * Three_Vector => (  8.00000,  17.00000,  26.00000,  -8.00000)
Transpose (Four_By_Three) * Four_Vector => ( 37.00000,  41.00000,  45.00000)
Square_Right (Three_By_Four) => (( 30.00000,  70.00000, -11.00000), 
( 70.00000, 174.00000,   1.00000), 
(-11.00000,   1.00000,  95.00000))
Three_By_Four * Four_By_Three => (( 26.00000,  28.00000,  30.00000), 
( 70.00000,  80.00000,  90.00000), 
( -6.00000,   3.00000,  12.00000))
Four_By_Three * Three_By_Four => (( 38.00000,  11.00000,  11.00000,  11.00000), 
( 83.00000,  32.00000,  35.00000,  38.00000), 
(128.00000,  53.00000,  59.00000,  65.00000), 
(-38.00000, -11.00000, -11.00000, -11.00000))
Transpose (Three_By_Four) * Three_By_Three => ((107.00000,  23.00000,  20.00000), 
( 23.00000,  41.00000,  50.00000), 
( 20.00000,  50.00000,  62.00000), 
( 17.00000,  59.00000,  74.00000))
Inverse (Three_By_Four) => ((  0.13889,  -0.02778,   0.11111), 
( -1.14352,   0.49537,  -0.14815), 
( -0.12963,   0.09259,  -0.03704), 
(  0.88426,  -0.31019,   0.07407))
