Testing Gen_Math.Gen_Square_Array
Identity => 
((  1.00000,   0.00000,   0.00000), 
(  0.00000,   1.00000,   0.00000), 
(  0.00000,   0.00000,   1.00000))
A => 
((  1.00000,   2.00000,   3.00000), 
(  5.00000,   6.00000,   7.00000), 
(  9.00000,  -1.00000,  -2.00000))
B => 
(  2.00000,  -3.00000,   4.00000)

- A => 
(( -1.00000,  -2.00000,  -3.00000), 
( -5.00000,  -6.00000,  -7.00000), 
( -9.00000,   1.00000,   2.00000))
A - A => 
((  0.00000,   0.00000,   0.00000), 
(  0.00000,   0.00000,   0.00000), 
(  0.00000,   0.00000,   0.00000))
A + A => 
((  2.00000,   4.00000,   6.00000), 
( 10.00000,  12.00000,  14.00000), 
( 18.00000,  -2.00000,  -4.00000))
A * A => 
(( 38.00000,  11.00000,  11.00000), 
( 98.00000,  39.00000,  43.00000), 
(-14.00000,  14.00000,  24.00000))
5.0 * A => 
((  5.00000,  10.00000,  15.00000), 
( 25.00000,  30.00000,  35.00000), 
( 45.00000,  -5.00000, -10.00000))
A * B => (  8.00000,  20.00000,  13.00000)
Square_Right (A) => 
(( 14.00000,  38.00000,   1.00000), 
( 38.00000, 110.00000,  25.00000), 
(  1.00000,  25.00000,  86.00000))
Square_Left  (A) => 
((107.00000,  23.00000,  20.00000), 
( 23.00000,  41.00000,  50.00000), 
( 20.00000,  50.00000,  62.00000))
Times_Diag (A, B) => 
((  2.00000,  -6.00000,  12.00000), 
( 10.00000, -18.00000,  28.00000), 
( 18.00000,   3.00000,  -8.00000))
Diag_Times (B, A) => 
((  2.00000,   4.00000,   6.00000), 
(-15.00000, -18.00000, -21.00000), 
( 36.00000,  -4.00000,  -8.00000))
Transpose_Times (A, A) => 
((107.00000,  23.00000,  20.00000), 
( 23.00000,  41.00000,  50.00000), 
( 20.00000,  50.00000,  62.00000))
Times_Transpose (A, A) => 
(( 14.00000,  38.00000,   1.00000), 
( 38.00000, 110.00000,  25.00000), 
(  1.00000,  25.00000,  86.00000))
